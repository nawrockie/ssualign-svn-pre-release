.TH "ssu-align" 1 "@RELEASEDATE@" "@PACKAGE@ @RELEASE@" "@PACKAGE@ Manual"

.SH NAME
.TP 
ssu-align - align small subunit ribosomal RNA (16s/18s SSU rRNA) sequences

.SH SYNOPSIS
.B ssu-align
.I [options]
.I cm-file
.I sequence-file
.I output-root
.I params-file

.SH DESCRIPTION

.B ssu-align
searches for and aligns SSU rRNA sequences in 
.I sequence-file
to the covariance model(s) (CM) in
.I cm-file,
and outputs multiple sequence alignment(s).

.PP
The
.I sequence-file 
must be in FASTA format.

.PP
CMs are probabilistic profile models of RNA consensus sequence and
secondary structure.  CM files can include one or more models.  The
default CM file for
.B ssu-align
(ssu3-0p1.cm) contains three CMs: an archaeal SSU model, a bacterial
SSU model and a eukaryotic SSU model. These models were built from
structural alignments from Robin Gutell's Comparative RNA Website
database (CRW) (Cannone et al., BMC Bionformatics. 2002; 3:2.).
Other SSU CM files can be produced using 
.B infernal's
.B cmbuild 
program from a structurally annotated SSU RNA sequence alignment, and
used in place of, or appended to the default ssu3-0p1.cm file by
simple file concatenation.

.PP
Each target sequence in 
.I sequence-file 
is assumed to contain 0 or 1 SSU sequences or subsequences on either
strand (either the actual sequence in the file, or its reverse
complement) that will match best (score highest) to one of the models
in 
.I cm-file.
Given an input sequence file, 
.B ssu-align 
proceeds through two stages to create alignments.  

.PP
In the first stage,
the best-matching model and the begin and end positions of the SSU
(sub)sequence are defined for each target sequence. This is achieved by
searching each target with
.I N
HMMs, one for each of the 
.I N
models in 
.I cm-file,
to find the highest scoring SSU hit,
the subsequence defined by a begin and end position that has the
highest bit score to each HMM.  In this stage, only primary sequence
conservation contributes to the score. The model that finds the
highest scoring hit for each target sequence is that sequence's
.I "best-matching" 
model.  If the best-matching model's hit has a score
greater than a minimum bit score (by default 100 bits, but changeable to
.I <x> 
with 
.BI -b " <x>"
) and a length greater than a minimum length (by default 1 residue, but changeable to 
.I <n>
with 
.BI -l " <n>"
), 
the target subsequence survives to stage 2. 

.PP
In stage 2, each surviving target subsequence defined by the begin and
end positions of the highest scoring hit is extracted (that is, some
suspected nonhomologous sequence at the begin and ends may be trimmed
off) and aligned to its best-matching model. At this stage, both
primary sequence and well-nested secondary structure conservation of
the SSU model are taken into account during alignment. The final
output of an
.B ssu-align 
run is 
.I M 
multiple sequence alignments, one for each
of the 
.I M
models that was the best match for at least 1 target sequence. 

.PP 
As
.B ssu-align
proceeds through its two stages, it prints information about what it
is doing and about the output files it is creating to the screen. The
format of these output files is described in the User's Guide.
Each time 
.B ssu-align 
is executed, it creates a new directory called
.I output-root
in the current working directory where it places its output files.

.PP 
The 
.B -n 
and
.B -c
options modify the behavior of
.B ssu-align 
so that it runs in a special
.I "prep"
mode, which can be useful if the
.I sequence-file
is especially large.
In prep mode, 
.B ssu-align 
splits up 
.I sequence-file
into many smaller files and creates
scripts to run 
.B ssu-align
on each of them in parallel (possibly on a compute cluster) and merge all of
the resulting alignments back into master alignments. These master
alignments will be identical to the alignments that would have been
created if a single, large
.B ssu-align
run was performed for the complete sequence file. An example of
running prep mode is included in the User's Guide Tutorial section.

.SH OPTIONS

.TP
.B -h
Print brief help; includes version number and summary of
all options.

.TP
.BI -F
Allow output directory 
.I output-root
to be deleted and
overwritten. Normally, if the
.I output-root 
directory already exists, 
.B ssu-align 
exits with an error unless the
.I -F
option is set.

.TP
.BI -b " <x>"
Set the minimum bit score threshold for stage 1 survival of an HMM hit as
.I <x>.
Only hits that meet or exceed this threshold will be aligned in stage 2.
By default, 
.I <x>
is 100 bits. 

.TP
.BI -l " <n>"
Set the minimum length threshold for stage 1 survival of
an HMM hit as
.I <x>.
Only hits that meet or exceed this threshold will be aligned in stage 2.
By default, 
.I <n>
is 1.

.TP
.BI -n " <n>"
Run in special 
.I "prep"
mode. Split 
.I sequence-file
into multiple files with
.I <n>
sequences each, and create scripts to run 
.B ssu-align 
on each of the smaller sequence files and merge the resulting
alignments into master alignments when they are all finished running. 
These master alignments will be identical to the alignments that would
have been created if a single
.B ssu-align
run was performed for the complete sequence file.

.TP
.BI -c " <n>"
Run in special 
.I "prep"
mode. Split 
.I sequence-file
into 
.I <n> 
files, each with the same number of sequences.
Also, create scripts to run 
.B ssu-align 
on each of the smaller sequence files and merge the resulting
alignments into master alignments when they are all finished running. 
These master alignments will be identical to the alignments that would
have been created if a single
.B ssu-align
run was performed for the complete sequence file.

.TP
.B -s 
Only perform the search stage (stage 1). Determine
the best-matching model, define the likely begin
and end positions for each SSU (sub)sequence, and extract those
subsequence from 
.I sequence-file. 
Do not align each extracted sequence to its best matching model.

.TP
.B -a 
Skip the stage 1 search and only perform the alignment stage (stage 2).
Presume that each full length target sequence in
.I sequence-file
is a SSU sequence or subsequence that matches
to the CM in 
.I cm-file.
This is only allowed if
.I cm-file
contains exactly 1 CM.

.TP
.B -u 
Do not truncate each target sequence to its predicted begin and end
SSU positions from stage 1. Instead, in stage 2, align each 
full length sequence from
.I sequence-file
to its best matching model from stage 1.

.TP
.BI -i " <x>"
After creating alignments in stage 2, filter the alignment based on
sequence identity so that no two sequences in the filtered alignment
will share more than
.I <x>
fractional identity. If this option is used in prep mode
(when 
.B -n
or 
.B -c 
is also used), then each small alignment (those created for the
split-up sequence file) 
will be filtered prior to merging to create a master
alignment. The master alignment will also be filtered.
However, in this case the master alignments will not necessarily be identical to the
alignments created with a single run of
.B ssu-align.
This is because the sequences that are removed by filtering is order
dependent, so many filterings of the smaller intermediate alignments
may remove different sequences than a single filtering of the large master
alignment.

.TP
.B -t
In stage 1, do not search the reverse complement of each sequence,
only search the top strand (the actual sequence as it appears in
.I sequence-file).
Use this option if it is known that none of the input
sequences are reverse complements of SSU sequences. 

.TP
.B -w
In stage 1, use the HMM Forward algorithm instead of the HMM Viterbi
algorithm for searching for hits. Forward is about two-fold slower,
but may be more sensitive (i.e. result in more accurate definitions of
start and end positions) in rare cases.

.TP
.B -g
In stage 1, use a globally configured HMM for searching that will only
find hits to full length SSU sequences.  By default, the
HMM is configured in local mode which will find matches to SSU
subsequences and full SSU sequences.

.TP
.B -d
Do not append posterior probabilities (alignment confidence estimates)
to the resulting alignments. By default, these probabilities are
appended to the output alignments. These probabilities are useful for
automatically masking out ambiguously aligned regions of the output
alignments prior to phylogenetic inference as described in the User's
Guide. This option will accelerate the alignment step by about 50%,
and result in alignment files that take up about 67% less
space. However, it should only be used if you know you do not want to
mask or prune the alignments at a later stage.

.TP
.B -k
Do not erase the 
.I N
local CM file copies (one for each of the 
.I N
CMs in 
.I cm-file
) from the 
.I output-root
directory after running
.B ssu-align.
By default, these CM files, which are temporarily copied to 
.I output-root
for convenience during execution of the program are erased
after the program finishes running.

.TP
.BI -x " <x>"
Change the maximum matrix size for the alignment stage to 
.I <x> 
Mb. By default 
.I <x> 
is 4096 Mb (4 Gb). This option should only used if
.B ssu-align
is crashing due to insufficient RAM. The program should tell you if
this is the case with an informative error message, but may not in all
cases. It is 
.I not 
necessary to decrease 
.I <x>
if your computer has less than 4 Gb of RAM. 
